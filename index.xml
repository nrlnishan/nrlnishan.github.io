<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nishan&#39;s Blog</title>
    <link>https://nrlnishan.github.io/</link>
    <description>Recent content on Nishan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Jan 2021 21:46:48 +0700</lastBuildDate><atom:link href="https://nrlnishan.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SwiftUI Journey</title>
      <link>https://nrlnishan.github.io/posts/learn-swiftui/</link>
      <pubDate>Wed, 13 Jan 2021 21:46:48 +0700</pubDate>
      
      <guid>https://nrlnishan.github.io/posts/learn-swiftui/</guid>
      <description>For those people who don&amp;rsquo;t know about SwiftUI, it is the latest shiny framework from apple which everyone is talking about. I have been trying it on and off for past 6 months. But now i feel the best way to learn it is to make an app using SwiftUI. I&amp;rsquo;ll update about my journey here. Stay tuned&amp;hellip;
# Day 1: Jan 13, 2020 I started an app to track my expenses.</description>
    </item>
    
    <item>
      <title>Word Quest</title>
      <link>https://nrlnishan.github.io/projects/word-quest/</link>
      <pubDate>Wed, 06 Jan 2021 22:52:20 +0700</pubDate>
      
      <guid>https://nrlnishan.github.io/projects/word-quest/</guid>
      <description>Word Quest is my small attempt in game development. It is an ios word finding games where you have to find words hidden in mist of letters. You can download it from this link Word Quest - Appstore
There are 40 quests with 10 levels inside each quest. Letters for the words are displayed in 5x5 grid and you have to swipe between letters in the grid to find the word.</description>
    </item>
    
    <item>
      <title>Gym Diary</title>
      <link>https://nrlnishan.github.io/projects/gym-diary/</link>
      <pubDate>Wed, 06 Jan 2021 22:49:41 +0700</pubDate>
      
      <guid>https://nrlnishan.github.io/projects/gym-diary/</guid>
      <description>Gym Diary is one of my first personal project. Its an iOS app for keeping track of all your workout &amp;amp; fitness related activities. I&amp;rsquo;d love if you guys checkout my app and leave a valuable feedback. You can download it from this link. Gym Diary - Appstore
Features:  Dark Mode Clean &amp;amp; Beautiful UI Unlimited workout creation Create your own workout plan Progress Graph iCloud Sync Widgets [Coming Soon] Watch OS App [Coming Soon]   Screenshots </description>
    </item>
    
    <item>
      <title>Objective-C : P.S. I still hate you</title>
      <link>https://nrlnishan.github.io/posts/objective-c-i-hate-you/</link>
      <pubDate>Fri, 04 Sep 2020 22:25:52 +0700</pubDate>
      
      <guid>https://nrlnishan.github.io/posts/objective-c-i-hate-you/</guid>
      <description>My rant on why i hate objective-c. This article is not the comparison between Swift and Objective-C. I have been working on a project written in obj-c these days and it reminded me how fond i have grown of writing code in swift and some of the reasons why i hated obj-c.
&amp;hellip;
When i started my career in iOS development, Swift 2.0 was just out. The company that i worked for adopted it early and i got the opportunity to use swift in its early days.</description>
    </item>
    
    <item>
      <title>Learn about Property Wrappers in Swift</title>
      <link>https://nrlnishan.github.io/posts/property-wrappers/</link>
      <pubDate>Wed, 20 May 2020 21:56:51 +0700</pubDate>
      
      <guid>https://nrlnishan.github.io/posts/property-wrappers/</guid>
      <description>Swift 5.1 introduced an interesting concept called Property Wrappers. As the name suggests, it creates a wrapper around any plain old properties in structÂ , class or enum and enhance their abilities. Let&amp;rsquo;s dive right into code. Almost every app out there saves some kind of information in UserDefaults. The common approach to do that would be:
struct AppSettings { // Update the respective value in UserDefault static var isDarkModeEnabled = false { didSet { UserDefaults.</description>
    </item>
    
  </channel>
</rss>
